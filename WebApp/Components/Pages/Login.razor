@page "/login"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<h3>Login</h3>

<div class="login-container">
    <div class="form-group">
        <label for="username">Username:</label>
        <input type="text" id="username" @bind="Username" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password:</label>
        <input type="password" id="password" @bind="Password" class="form-control" />
    </div>
    <button class="btn btn-primary" @onclick="PerformLogin">Login</button>
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-danger mt-2">@ErrorMessage</div>
    }
</div>

@code {
    private string Username { get; set; }
    private string Password { get; set; }
    private string ErrorMessage { get; set; }

    private async Task PerformLogin()
    {
        var user = new { Username, Password };
        var response = await Http.PostAsJsonAsync("api/auth/login", user);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<Dictionary<string, string>>();
            var token = result["token"];

            SetToken(token);
            NavigationManager.NavigateTo("/file-upload");
        }
        else
        {
            ErrorMessage = "Invalid username or password.";
        }
    }

    private void SetToken(string token)
    {
        JSRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", token);
    }
}